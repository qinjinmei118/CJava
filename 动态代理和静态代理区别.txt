动态代理是在运行时才生成class文件，相比于静态代理，执行效率会有所降低，静态代理在运行前class文件就已经编译好了。
静态代理事先知道要代理的是什么，只代理一个类，而动态代理运行时才知道要代理什么，代理一个接口的多个实现。
动态代理类的字节码在程序运行时由Java反射机制动态生成，无需程序员手工编写它的源代码。
静态代理不改变原有类的基础上，增加额外功能。但是代码就会显得很多，看起来不简洁，增加代码维护的复杂度。所有动态代理就很好解决这个问题，更具灵活性。
静态代理：
1.代理接口
2.目标类，具体处理业务
3.静态代理类
4.客户类（测试类）
动态代理：
1.创建调用处理器，用来处理Proxy所有方法调用
2.通过目标类加载器和所有接口列表，获取动态代理类类对象，
3.通过反射机制获取动态代理类的构造函数
4.以调用处理器为参数，利用动态代理类的构造函数创建动态代理类对象

